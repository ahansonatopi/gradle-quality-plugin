plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.9.4'
    id 'com.jfrog.bintray' version '1.6'
    id 'net.researchgate.release' version '2.3.5'
    id 'ru.vyarus.quality' version '1.3.0'
    id 'ru.vyarus.java-lib' version '1.0.1'
    id 'ru.vyarus.github-info' version '1.0.0'
    id "com.github.ben-manes.versions" version '0.12.0'
}

sourceCompatibility = 1.6

wrapper {
    gradleVersion = 2.12
}

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.test.runtimeClasspath.join("\n")
    }
}

repositories { jcenter() }
dependencies {
    testCompile gradleTestKit()
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }
    testRuntime files(createClasspathManifest)
    testCompile 'ru.vyarus:gradle-animalsniffer-plugin:1.0.0'
}

group = 'ru.vyarus'
description = 'Gradle quality plugin for Java and Groovy'

github {
    user 'xvik'
    license 'MIT'
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email "vyarus@gmail.com"
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? bintrayUser : 'USER'
    key = project.hasProperty('bintrayKey') ? bintrayKey : 'KEY'
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = 'xvik'
        name = project.name
        desc = project.description
        labels = ['gradle', 'java', 'groovy', 'quality', 'checkstyle', 'pmd', 'findbugs', 'codenarc']
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = project.hasProperty('gpgPassphrase') ? gpgPassphrase : ''
            }
            mavenCentralSync {
                sync = true
                user = project.hasProperty('sonatypeUser') ? sonatypeUser : 'USER'
                password = project.hasProperty('sonatypePassword') ? sonatypePassword : 'PASSWORD'
            }
        }
    }
}

pluginBundle {
    description = 'Static code analysis for Java and Groovy projects'
    tags = ['java', 'groovy', 'quality', 'checkstyle', 'pmd', 'findbugs', 'codenarc']

    plugins {
        qualityPlugin {
            id = 'ru.vyarus.quality'
            displayName = project.description
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }
}

afterReleaseBuild {
    dependsOn = [bintrayUpload, publishPlugins]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events "skipped", "failed", "standard_error"
        exceptionFormat "full"
    }
    maxHeapSize = "512m"
}

dependencyUpdates {
    doFirst {
        project.group = 'foo'
    }
    revision = 'release'
}
